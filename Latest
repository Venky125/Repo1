To find the latest tar file by timestamp in the filename, such as dmgr_3025.tgz and dmgr_3036.tgz, and extract only the latest one using a shell command in an Ansible task, you can use the following approach:

✅ Shell Command

latest_file=$(ls -1v dmgr_*.tgz | tail -n 1) && tar -xzf "$latest_file"

✅ Explanation:

ls -1v dmgr_*.tgz: lists files one per line, using version sort (handles numeric parts properly).

tail -n 1: gets the last one (which will be the one with the highest number).

tar -xzf "$latest_file": extracts that file.



---

✅ Ansible Task Example:

- name: Extract latest dmgr tar file
  ansible.builtin.shell: |
    latest_file=$(ls -1v dmgr_*.tgz | tail -n 1)
    tar -xzf "$latest_file"
  args:
    chdir: /path/to/tar/files   # Change to your directory


---

If you're running this inside an Ansible template (Controller UI), you can wrap it the same way inside a shell module.

Let me know if you want it to return the extracted directory or perform cleanup after extraction.

