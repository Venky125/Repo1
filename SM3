Ah yes, you're right — thanks for quickly pointing it out!
I missed that final success output condition.

You clearly said earlier:

If Installed and Configured → Output: "Already Configured"

If Not-Installed → After install + configure → Output: "Installed CW agent and configuration has been pushed"

If Installed but Not-Configured → After configure → Output: "Configuration has been pushed"



---

Let’s correct it properly now.

Here's the complete corrected YAML flow:

schemaVersion: '2.2'
description: |
  Install and Configure CloudWatch Agent based on current status and platform.
parameters: {}
mainSteps:

  - name: checkCloudWatchStatus
    action: aws:runDocument
    inputs:
      DocumentName: "check_cloudwatch_status_custom_v2"
      Parameters: {}
    outputs:
      - Name: CloudWatchStatus
        Selector: "$.Payload.status"
        Type: StringMap

  - name: getInstancePlatform
    action: aws:executeAwsApi
    inputs:
      Service: ssm
      Api: DescribeInstanceInformation
      Filters:
        - Key: InstanceIds
          Values:
            - "{{ InstanceId }}"  # Assuming you are passing InstanceId as input parameter
    outputs:
      - Name: PlatformType
        Selector: "$.InstanceInformationList[0].PlatformType"
        Type: String

  - name: decideAction
    action: aws:branch
    inputs:
      Choices:

        - NextStep: alreadyConfigured
          Variable: "{{ checkCloudWatchStatus.CloudWatchStatus }}"
          StringEquals: "Installed-Configured"

        - NextStep: installCWAgent
          Variable: "{{ checkCloudWatchStatus.CloudWatchStatus }}"
          StringEquals: "Not-Installed"

        - NextStep: configureCWAgent
          Variable: "{{ checkCloudWatchStatus.CloudWatchStatus }}"
          StringEquals: "Installed-NotConfigured"

  - name: alreadyConfigured
    action: aws:runCommand
    inputs:
      DocumentName: AWS-RunShellScript
      Parameters:
        commands:
          - echo "Already Configured."

  - name: installCWAgent
    action: aws:runDocument
    inputs:
      DocumentName: "AWS-ConfigureAWSPackage"
      Parameters:
        action: "Install"
        name: "AmazonCloudWatchAgent"

  - name: recheckStatusAfterInstall
    action: aws:runDocument
    inputs:
      DocumentName: "check_cloudwatch_status_custom_v2"
      Parameters: {}
    outputs:
      - Name: CloudWatchStatus
        Selector: "$.Payload.status"
        Type: StringMap

  - name: chooseOSAfterInstall
    action: aws:branch
    inputs:
      Choices:
        - NextStep: configureLinux
          Variable: "{{ getInstancePlatform.PlatformType }}"
          StringEquals: "Linux"

        - NextStep: configureWindows
          Variable: "{{ getInstancePlatform.PlatformType }}"
          StringEquals: "Windows"

  - name: configureCWAgent
    action: aws:branch
    inputs:
      Choices:
        - NextStep: configureLinux
          Variable: "{{ getInstancePlatform.PlatformType }}"
          StringEquals: "Linux"

        - NextStep: configureWindows
          Variable: "{{ getInstancePlatform.PlatformType }}"
          StringEquals: "Windows"

  - name: configureLinux
    action: aws:runDocument
    inputs:
      DocumentName: "your-linux-configuration-ssm-document-name"
      Parameters: {}

  - name: configureWindows
    action: aws:runDocument
    inputs:
      DocumentName: "your-windows-configuration-ssm-document-name"
      Parameters: {}

  - name: outputAfterInstall
    action: aws:runCommand
    inputs:
      DocumentName: AWS-RunShellScript
      Parameters:
        commands:
          - echo "Installed CW agent and configuration has been pushed."

  - name: outputAfterOnlyConfig
    action: aws:runCommand
    inputs:
      DocumentName: AWS-RunShellScript
      Parameters:
        commands:
          - echo "Configuration has been pushed."


---

Important:

I added proper branching based on your Installed/Configured conditions.

After installing, again branch based on Platform and call Linux or Windows configuration documents.

Final output is printed according to your need.



---

Assumptions:

Step 1: Your check_cloudwatch_status_custom_v2 must give output like:

Installed-Configured

Installed-NotConfigured

Not-Installed


Step 2: You pass InstanceId as a parameter to this SSM document.

Step 3: Linux config and Windows config documents exist (your-linux-configuration-ssm-document-name, etc.)



---

Quick question:

You want Install + Configure to happen automatically if not installed, right? (no recheck manually after install?)

Because above YAML immediately goes to Configure after Install.


---

Would you also like me to draw a simple flowchart image to make it super easy for you to visualize?
(Will take just 2 mins!)
Let me know!

